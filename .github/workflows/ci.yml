name: CI/CD Pipeline

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:  # Ручной запуск через UI GitHub

jobs:
  compile:
    # Запускается ТОЛЬКО при создании/обновлении PR
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Compile project
        run: mvn compile

  test:
    # Запускается при push в master или ручном запуске
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: compile  # Ждём успешной компиляции (если был PR)
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Playwright browsers
        run: |
          npx playwright install --with-deps
          npx playwright install chromium firefox webkit
      - name: Run Tests
        run: mvn clean test
      - name: Generate Allure Report
        if: always()
        run: mvn allure:report
      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: target/site/allure-maven-plugin

  delete-branch:
    # Удаляет ветку после мержа в master
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Delete branch after merge
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request?.number;
            if (prNumber) {
              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: prNumber,
                state: 'closed'
              });
              await github.rest.git.deleteRef({
                owner,
                repo,
                ref: `heads/${context.payload.pull_request.head.ref}`
              });
            }